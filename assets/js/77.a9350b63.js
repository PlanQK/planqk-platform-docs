(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{377:function(e,t,a){"use strict";a.r(t);var s=a(7),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"create-and-test-an-on-premise-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-and-test-an-on-premise-service"}},[e._v("#")]),e._v(" Create and Test an On-premise Service")]),e._v(" "),t("p",[e._v("In this tutorial you will learn how to create an on-premise service with a pay-per-use pricing plan\nand report the usage of your service to our metering API.\nFurther reading on external services can be found in our "),t("RouterLink",{attrs:{to:"/on-premise-services/introduction.html"}},[e._v("On-premise Services documentation")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"the-example-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-example-service"}},[e._v("#")]),e._v(" The Example Service")]),e._v(" "),t("p",[e._v("As our example we use a simple FastAPI service that reports for each request an API call to the metering API.\nYou can find the complete code of the service in "),t("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/planqk-services/external-service-sample",target:"_blank",rel:"noopener noreferrer"}},[e._v("this GitHub repo"),t("OutboundLink")],1),e._v(".\nAn excerpt of the service with the metering code is shown below:")]),e._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("meter_api_usage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Union"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    correlation_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("headers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"x-correlation-id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    PLANQK_METERING_API "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://platform.planqk.de/qc-catalog/external-services/metering"')]),e._v("\n    ACCESS_TOKEN "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" os"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("getenv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ACCESS_TOKEN"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    PRODUCT_ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" os"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("getenv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"PRODUCT_ID"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("None")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n    payload "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"correlationId"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" correlation_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"productId"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" PRODUCT_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"count"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    r "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" requests"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("METERING_API_URL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" json"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("payload"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" headers"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-Auth-Token"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ACCESS_TOKEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("The "),t("code",[e._v("meter_api_usage")]),e._v(" method sends a POST request to the metering API with the following request body:")]),e._v(" "),t("ul",[t("li",[e._v("The "),t("code",[e._v("correlationId")]),e._v(" is needed identify the consumer of your.\nThe correlation id is obtained from the "),t("code",[e._v("x-correlation-id")]),e._v(" header of the request that was forwarded by the PlanQK API Gateway to your service.")]),e._v(" "),t("li",[e._v("The "),t("code",[e._v("productId")]),e._v(" holds the id of the API product you want to report. We will learn how to obtain the id in the next step.")]),e._v(" "),t("li",[e._v("The "),t("code",[e._v("count")]),e._v(" is the quantity of units you want to report in this case we report 1 API call.")])]),e._v(" "),t("p",[e._v("For authentication, an access token is provided in the "),t("code",[e._v("X-Auth-Token")]),e._v(" header field.")]),e._v(" "),t("p",[e._v("You must provide the API product id and access token as environment variables to your service.\nIn the following steps, you will learn how to obtain both the API product ID and access token.")]),e._v(" "),t("h2",{attrs:{id:"host-the-example-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#host-the-example-service"}},[e._v("#")]),e._v(" Host the Example Service")]),e._v(" "),t("p",[e._v("First you need to deploy the service on an infrastructure of your choice.\nAn easy and free solution is "),t("a",{attrs:{href:"https://render.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Render"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("You can deploy this example to render with just a couple of clicks:")]),e._v(" "),t("ul",[t("li",[e._v("Go to "),t("a",{attrs:{href:"https://dashboard.render.com/select-repo?type=web",target:"_blank",rel:"noopener noreferrer"}},[e._v("Render"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v('Create new "Web Service" from "Public Git repository"\n'),t("ul",[t("li",[e._v("Use "),t("code",[e._v("https://github.com/PlanQK/planqk-platform-samples")]),e._v(" as public repository URL")]),e._v(" "),t("li",[e._v("Choose a region close to you")]),e._v(" "),t("li",[e._v("Use "),t("code",[e._v("master")]),e._v(" as branch")]),e._v(" "),t("li",[e._v("Use "),t("code",[e._v("python/external-service-sample")]),e._v(" as root directory")]),e._v(" "),t("li",[e._v("Use "),t("code",[e._v("Docker")]),e._v(" as runtime")]),e._v(" "),t("li",[e._v('Choose an instance type, i.e., the "Free" plan is just fine')]),e._v(" "),t("li",[e._v('Click "Create Web Service"')]),e._v(" "),t("li",[e._v("And your done your service should be up and running in a few minutes  ðŸŽ‰")])])])]),e._v(" "),t("h2",{attrs:{id:"integrate-as-an-on-premise-service-on-the-planqk-platform"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#integrate-as-an-on-premise-service-on-the-planqk-platform"}},[e._v("#")]),e._v(" Integrate as an On-premise Service on the PlanQK Platform")]),e._v(" "),t("p",[e._v("Once your service is deployed, you can integrate it as an on-premise service on the PlanQK Platform.\nTo do so, follow these steps:")]),e._v(" "),t("ol",[t("li",[e._v("Go to the "),t("a",{attrs:{href:"https://platform.planqk.de/services/new",target:"_blank",rel:"noopener noreferrer"}},[e._v("create service page"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("Enter a name for your service.")]),e._v(" "),t("li",[e._v("Under "),t("code",[e._v("Service Type")]),e._v(" select "),t("code",[e._v("On-premise Service")]),e._v(".")]),e._v(" "),t("li",[e._v("Enter the URL of your service.")]),e._v(" "),t("li",[e._v("Add the "),t("a",{attrs:{href:"https://raw.githubusercontent.com/PlanQK/planqk-platform-samples/master/planqk-services/external-service-sample/api-spec.yaml",target:"_blank",rel:"noopener noreferrer"}},[e._v("API specification"),t("OutboundLink")],1),e._v(" for your service.")]),e._v(" "),t("li",[e._v("Finally, click on "),t("code",[e._v("Create Service")]),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"add-a-pricing-plan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-a-pricing-plan"}},[e._v("#")]),e._v(" Add a Pricing Plan")]),e._v(" "),t("p",[e._v("Next, create a pay-per-use pricing plan for your service containing a product for API calls.\nYou can create a pricing plan for your service by following these steps:")]),e._v(" "),t("ol",[t("li",[e._v("On the details page of your service, click on "),t("code",[e._v("Create Pricing Plan")]),e._v(".")]),e._v(" "),t("li",[e._v("On the create pricing plan page, add a product to the pricing plan and enter the following values:\n"),t("ul",[t("li",[t("strong",[e._v("Name")]),e._v(": "),t("code",[e._v("API")])]),e._v(" "),t("li",[t("strong",[e._v("Unit Price")]),e._v(": "),t("code",[e._v("0.00001")]),e._v(", or any other price you want to charge for an API call")]),e._v(" "),t("li",[t("strong",[e._v("Unit")]),e._v(": "),t("code",[e._v("call")])])])]),e._v(" "),t("li",[e._v("Click on "),t("code",[e._v("Create Plan")]),e._v(".")]),e._v(" "),t("li",[e._v("On the services details page you will see your pricing plan with the product "),t("code",[e._v("API")]),e._v(".")]),e._v(" "),t("li",[e._v("Copy the ID of your API product by clicking on the copy icon.")]),e._v(" "),t("li",[e._v("Add the ID as environment variable with key "),t("code",[e._v("PRODUCT_ID")]),e._v(" to your service.")])]),e._v(" "),t("h2",{attrs:{id:"create-an-access-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-an-access-token"}},[e._v("#")]),e._v(" Create an Access Token")]),e._v(" "),t("p",[e._v("Requests to the metering API must be authenticated with an access token.\nYou can create an access token on the "),t("a",{attrs:{href:"https://platform.planqk.de/settings/access-tokens",target:"_blank",rel:"noopener noreferrer"}},[e._v("Personal Access Tokens"),t("OutboundLink")],1),e._v(" page of your account.\nThe access token must have the "),t("code",[e._v("API")]),e._v(" scope.")]),e._v(" "),t("p",[e._v("Once you have created the access token, you can add it as environment variable with key "),t("code",[e._v("ACCESS_TOKEN")]),e._v("to your service.")]),e._v(" "),t("h2",{attrs:{id:"test-your-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-your-service"}},[e._v("#")]),e._v(" Test your Service")]),e._v(" "),t("p",[e._v("Once you have added the API product ID and access token to your service, its time to test if everything works.\nYou can test your service using our Metering Test Mode by following these steps:")]),e._v(" "),t("ol",[t("li",[e._v("Publish your service internal by clicking on "),t("code",[e._v("Publish Internal")]),e._v(" on the service details page.")]),e._v(" "),t("li",[e._v("Create an Application on the "),t("a",{attrs:{href:"https://platform.planqk.de/applications",target:"_blank",rel:"noopener noreferrer"}},[e._v("Applications"),t("OutboundLink")],1),e._v(" page.")]),e._v(" "),t("li",[e._v("Subscribe to your service by clicking on "),t("code",[e._v("Subscribe to Service")]),e._v(" on the application details page.\nNow, you should see your service on the subscription list of the application")]),e._v(" "),t("li",[e._v("Click on the "),t("code",[e._v("Try it out")]),e._v(" button of your subscription.")]),e._v(" "),t("li",[e._v("On the "),t("code",[e._v("Try it out")]),e._v(" page, send a POST request to your service.")]),e._v(" "),t("li",[e._v("On the details page of your service, click on the "),t("code",[e._v("Metering Events")]),e._v(" to show the test metering history of your service.\nThere you should see the API call you just sent.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);
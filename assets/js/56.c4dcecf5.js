(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{353:function(t,e,s){"use strict";s.r(e);var a=s(7),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"runtime-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runtime-interface"}},[t._v("#")]),t._v(" Runtime Interface")]),t._v(" "),e("p",[t._v("We offer an asynchronous interface for executing services.\nThis is because the execution of services might take several hours (e.g., for training variational circuits).\nTherefore, each service API employs polling to avoid client timeouts when waiting for "),e("a",{attrs:{href:"http://restalk-patterns.org/long-running-operation-polling.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("long-running operation"),e("OutboundLink")],1),t._v(" results.")]),t._v(" "),e("p",[t._v("We support two runtime configurations:\n(1) Python Templates that are based our "),e("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/coding-templates/python",target:"_blank",rel:"noopener noreferrer"}},[t._v("coding templates"),e("OutboundLink")],1),t._v(" and\n(2) Custom Docker Containers that can be run as a one-shot process, examples can be found "),e("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/coding-templates/docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"python-template"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python-template"}},[t._v("#")]),t._v(" Python Template")]),t._v(" "),e("p",[t._v("When starting with PlanQK, we recommend using "),e("code",[t._v("Python Template")]),t._v(" as your runtime configuration.\nIt is best to use the "),e("RouterLink",{attrs:{to:"/quickstart.html"}},[t._v("PlanQK CLI")]),t._v(" to create a new project based on our coding templates.")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Samples and Templates")]),t._v(" "),e("p",[t._v("Several sample projects can be found in our "),e("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/coding-templates/python",target:"_blank",rel:"noopener noreferrer"}},[t._v("coding templates"),e("OutboundLink")],1),t._v(" repository.")])]),t._v(" "),e("h3",{attrs:{id:"lifecycle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle"}},[t._v("#")]),t._v(" Lifecycle")]),t._v(" "),e("p",[t._v("Our runtime expects a Python package with a "),e("code",[t._v("program.py")]),t._v(" file.\nThe "),e("code",[t._v("program.py")]),t._v(" file must contain a "),e("code",[t._v("run()")]),t._v(" method that is called by the runtime.\nFor each service execution, the runtime creates a new Python process and calls this method.")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Union"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ResultResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ErrorResponse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" Input")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("run()")]),t._v(" method is called with two arguments: "),e("code",[t._v("data")]),t._v(" and "),e("code",[t._v("params")]),t._v(".\nBoth arguments are dictionaries that contain the input data and parameters for the service execution.\nThe runtime ensures that the input provided via the Service API in the form of "),e("code",[t._v('{ "data": <data>, "params": <params> }')]),t._v(" is passed to the "),e("code",[t._v("run()")]),t._v(" method.")]),t._v(" "),e("h3",{attrs:{id:"output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" Output")]),t._v(" "),e("p",[t._v("Our runtime expects the "),e("code",[t._v("run()")]),t._v(" method to return a "),e("code",[t._v("ResultResponse")]),t._v(" or "),e("code",[t._v("ErrorResponse")]),t._v(" object.\nBoth objects must be JSON serializable and will be returned to the user via the Service API.")]),t._v(" "),e("p",[t._v("Each coding template already contains respective class representations for the "),e("code",[t._v("ResultResponse")]),t._v(" and "),e("code",[t._v("ErrorResponse")]),t._v(" objects.")]),t._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ErrorResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" detail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" code\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("detail "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" detail\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResultResponse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metadata"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metadata "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" metadata\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("You may exchange the "),e("code",[t._v("ResultResponse")]),t._v(" and "),e("code",[t._v("ErrorResponse")]),t._v(" classes with your own classes.\nHowever, you must ensure that your classes are JSON serializable and the name of the class is "),e("code",[t._v("ResultResponse")]),t._v(" and/or "),e("code",[t._v("ErrorResponse")]),t._v(".\nOtherwise, the runtime will not be able to serialize your objects and the service execution will fail.")]),t._v(" "),e("p",[t._v("We also support interim results, i.e., results that are not the final result of the service but which you want to make available to the user while the service is still running.\nIn this case, the output must be printed to stdout and prefixed with "),e("code",[t._v("PlanQK:Job:InterimResult")]),t._v(", for example:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('PlanQK:Job:InterimResult: {"sum":25.2}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("For interim results, the complete JSON string must be printed to a single line.")])]),t._v(" "),e("h2",{attrs:{id:"custom-docker-container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-docker-container"}},[t._v("#")]),t._v(" Custom Docker Container")]),t._v(" "),e("p",[t._v('We recommend using "Docker" only if one of the following reasons apply:')]),t._v(" "),e("ul",[e("li",[t._v("You need OS-level packages not included in the Python Template. With Docker, you have complete control over your base operating system and installed packages.")]),t._v(" "),e("li",[t._v("Your application is in a language not yet supported by PlanQK, like Go or Rust.")]),t._v(" "),e("li",[t._v("You need guaranteed reproducible builds. We release regular updates to our coding templates to improve functionality, security, and performance. While we aim for full backward compatibility, using a Dockerfile is the best way to ensure that your production runtime is always in sync with your local builds.")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Samples and Templates")]),t._v(" "),e("p",[t._v("Several sample projects can be found in our "),e("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/coding-templates/docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("coding templates"),e("OutboundLink")],1),t._v(" repository.\nThese are also available to be used as a template when creating a new service via the "),e("RouterLink",{attrs:{to:"/quickstart.html"}},[t._v("PlanQK CLI")]),t._v(".")],1)]),t._v(" "),e("h3",{attrs:{id:"lifecycle-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle-2"}},[t._v("#")]),t._v(" Lifecycle:")]),t._v(" "),e("p",[t._v("You have to create a Docker container that can be run as a one-shot process.\nThis means the Docker container starts, runs your code once and then exits.\nYou may use exit codes to indicate success or failure of your code.")]),t._v(" "),e("h3",{attrs:{id:"input-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input-2"}},[t._v("#")]),t._v(" Input:")]),t._v(" "),e("p",[t._v("The platform runtime uses the input provided via the Service API in the form of "),e("code",[t._v('{ "data": <data>, "params": <params> }')]),t._v(".\nThe runtime then mounts the input data to "),e("code",[t._v("/var/input/data.json")]),t._v(" and the parameters to "),e("code",[t._v("/var/input/params.json")]),t._v(" of the container.\nBoth files will contain valid JSON strings.")]),t._v(" "),e("h3",{attrs:{id:"output-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-2"}},[t._v("#")]),t._v(" Output:")]),t._v(" "),e("p",[t._v("Any result that should be returned to the user must be written to standard output (stdout) and prefixed with "),e("code",[t._v("PlanQK:Job:Result:")]),t._v(".\nOnly the first occurrence of the "),e("code",[t._v("PlanQK:Job:Result:")]),t._v(" marker will be used as the result output of the service.\nThe result itself must be a valid JSON string, for example (note that the output is a single line):")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('PlanQK:Job:Result: {"sum":42}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("We also support multi-line result outputs.\nIn this case, the output must be printed to stdout and wrapped with "),e("code",[t._v("PlanQK:Job:MultilineResult")]),t._v(", for example:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('PlanQK:Job:MultilineResult\n{\n  "sum": 42\n}\nPlanQK:Job:MultilineResult\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("We also support interim results, i.e., results that are not the final result of the service but which you want to make available to the user while the service is still running.\nIn this case, the output must be printed to stdout and prefixed with "),e("code",[t._v("PlanQK:Job:InterimResult")]),t._v(", for example:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('PlanQK:Job:InterimResult: {"sum":25.2}\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),e("p",[t._v("For interim results, the complete JSON string must be printed to a single line.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
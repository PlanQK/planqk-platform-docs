(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{374:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"using-the-sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-the-sdk"}},[t._v("#")]),t._v(" Using the SDK")]),t._v(" "),a("p",[t._v("The PlanQK Quantum SDK provides an easy way for developing quantum circuits using "),a("a",{attrs:{href:"https://pypi.org/project/qiskit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Qiskit"),a("OutboundLink")],1),t._v(" to be run on quantum devices provided by the "),a("a",{attrs:{href:"https://docs.platform.planqk.de",target:"_blank",rel:"noopener noreferrer"}},[t._v("PlanQK Platform"),a("OutboundLink")],1),t._v(".\nThe SDK is an extension for the "),a("a",{attrs:{href:"https://github.com/Qiskit/qiskit-metapackage",target:"_blank",rel:"noopener noreferrer"}},[t._v("Qiskit 1.0 SDK"),a("OutboundLink")],1),t._v(" and provides the same functionality and syntax as well as some PlanQK specific commands.")]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("You need to have Python 3.10 or higher installed.\nThe package is released on PyPI and can be installed via "),a("code",[t._v("pip")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--upgrade")]),t._v(" planqk-quantum\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("Ensure that you have versions older than Qiskit SDK 1.0 uninstalled before installing the PlanQK Quantum SDK.\nThe best way to ensure this is to create a new virtual environment and install the PlanQK Quantum SDK there.")])]),t._v(" "),a("h2",{attrs:{id:"execute-your-first-circuit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#execute-your-first-circuit"}},[t._v("#")]),t._v(" Execute your first circuit")]),t._v(" "),a("p",[t._v("In your Qiskit code you can access the PlanQK quantum backends through the "),a("code",[t._v("PlanqkQuantumProvider")]),t._v(" class.\nImport the class and instantiate it as shown below:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" planqk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qiskit "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PlanqkQuantumProvider\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("If you are already logged in with the "),a("RouterLink",{attrs:{to:"/quickstart.html#_3-login-to-your-account"}},[t._v("PlanQK CLI")]),t._v(" you can create the provider object without any parameters:")],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("provider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PlanqkQuantumProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Alternatively, you can also create the provider object by passing your PlanQK "),a("RouterLink",{attrs:{to:"/manage-access-tokens.html#personal-access-tokens"}},[t._v("personal access token")]),t._v(":")],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("provider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PlanqkQuantumProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("access_token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your-access-token"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("If you want to login with your organization, you can additionally pass the organization id as a parameter.\nThe organization id can be found in the organization settings on the PlanQK Platform:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("provider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PlanqkQuantumProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("access_token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your-access-token"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" organization_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your-organization-id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("After you have created the provider object you can list all backends supported by the PlanQK Platform and select the one\nyou want to use.\nThe available backends and their names can be also found "),a("RouterLink",{attrs:{to:"/quantum-hardware.html#quantum-hardware"}},[t._v("here")]),t._v(",  e.g., the "),a("code",[t._v("azure.ionq.simulator")]),t._v(" backend:")],1),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# list all available PlanQK quantum backends")]),t._v("\nbackends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" provider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backends"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# select a certain backend")]),t._v("\nbackend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" provider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"azure.ionq.simulator"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("Now you can execute your Qiskit circuit on the selected backend, retrieve its "),a("code",[t._v("job")]),t._v(" object, retrieve its results, cancel it etc.\nThe full example would look like this:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" planqk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qiskit "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PlanqkQuantumProvider\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" qiskit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("circuit "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QuantumCircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" transpile\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# instantiate the PlanQK provider and select a backend")]),t._v("\nprovider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PlanqkQuantumProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbackend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" provider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"azure.ionq.simulator"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create a qiskit circuit")]),t._v("\ncircuit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QuantumCircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncircuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# transpile circuit for backend")]),t._v("\ncircuit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" transpile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# execute circuit on selected backend")]),t._v("\njob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("circuit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shots"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("Executing your Qiskit code on the PlanQK platform may lead to execution costs depending on selected backend and number of shots.\nPlease find an overview about the costs for each backend "),a("a",{attrs:{href:"https://platform.planqk.de/pricing",target:"_blank",rel:"noopener noreferrer"}},[t._v("on our pricing page"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"deploy-your-circuit-as-a-planqk-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-your-circuit-as-a-planqk-service"}},[t._v("#")]),t._v(" Deploy your circuit as a PlanQK Service")]),t._v(" "),a("p",[t._v("To deploy your circuit to the PlanQK Platform you may adapt the "),a("code",[t._v("program.py")]),t._v(" file of the "),a("code",[t._v("python-starter")]),t._v(" template.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("To create a new development project, you may run "),a("code",[t._v("planqk init")]),t._v(" and select "),a("code",[t._v("Starter Qiskit")]),t._v(" as coding template.\nFurther instructions are available "),a("RouterLink",{attrs:{to:"/quickstart.html#create-your-first-project"}},[t._v("here")]),t._v(".")],1)]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("program.py")]),t._v(" file contains a "),a("code",[t._v("run()")]),t._v(" method which is called when the service is executed.\nCopy and paste the code from above into the "),a("code",[t._v("run()")]),t._v(" method and add the following line at the end of the function:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ResultResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"COMPLETED"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("You may want to add some additional information to the "),a("code",[t._v("ResultResponse")]),t._v(" object, e.g., the actual results of your circuit.\nYou are now able to deploy your circuit as a PlanQK Service.")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("planqk up")]),t._v(" to deploy your service to the PlanQK Platform.\nNext, you may use "),a("code",[t._v("planqk run")]),t._v(" to execute your service.")]),t._v(" "),a("h2",{attrs:{id:"what-s-next"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-s-next"}},[t._v("#")]),t._v(" What's next?")]),t._v(" "),a("ul",[a("li",[t._v("See our supported "),a("RouterLink",{attrs:{to:"/quantum-hardware.html"}},[t._v("quantum hardware and simulators")]),t._v(".")],1),t._v(" "),a("li",[t._v("Check out the "),a("RouterLink",{attrs:{to:"/tutorials/tutorial-qiskit.html"}},[t._v("Tutorial on how to create a PlanQK Service using the PlanQK Quantum SDK")]),t._v(".")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);
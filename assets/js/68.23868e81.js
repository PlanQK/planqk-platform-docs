(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{365:function(e,t,a){"use strict";a.r(t);var o=a(7),s=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"a-workflow-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-workflow-example"}},[e._v("#")]),e._v(" A workflow example")]),e._v(" "),t("p",[e._v("In this chapter, the set up of a workflow is described along a concrete example.")]),e._v(" "),t("p",[e._v("The example consist of 2 service calls whereas the second service processes the result of teh first service call.")]),e._v(" "),t("h2",{attrs:{id:"the-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-services"}},[e._v("#")]),e._v(" The Services")]),e._v(" "),t("p",[e._v("For this example 2 services will be combined in a workflow:")]),e._v(" "),t("ul",[t("li",[e._v("stock time series service")]),e._v(" "),t("li",[e._v("covariance generator")])]),e._v(" "),t("p",[e._v("Both services have to be available, published and subscribed by an algorithm.")]),e._v(" "),t("h3",{attrs:{id:"stock-time-series-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stock-time-series-service"}},[e._v("#")]),e._v(" Stock time series service")]),e._v(" "),t("p",[e._v("This service downloads the values of a given stock for a given time window.")]),e._v(" "),t("p",[e._v("It takes as input data:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Input Value")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("stock_symbols")]),e._v(" "),t("td",[e._v("Array of stock names, e.g. "),t("code",[e._v('["IBM","AAPL"]')])])]),e._v(" "),t("tr",[t("td",[e._v("start_date")]),e._v(" "),t("td",[e._v("The day of the first stock value to be retreived. Must be in form yyyy-mm-dd, e.g. "),t("code",[e._v("2022-01-01")])])]),e._v(" "),t("tr",[t("td",[e._v("end_date")]),e._v(" "),t("td",[e._v("The day of the last stock value to be retreived. Must be in form yyyy-mm-dd, e.g. "),t("code",[e._v("2022-02-02")])])])])]),e._v(" "),t("p",[e._v("It takes as input params:")]),e._v(" "),t("ul",[t("li",[e._v("no params")])]),e._v(" "),t("p",[e._v("It returns as output:")]),e._v(" "),t("ul",[t("li",[e._v("A Json structure containing for each stock an array of date-value pairs.")])]),e._v(" "),t("h3",{attrs:{id:"covariance-generator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#covariance-generator"}},[e._v("#")]),e._v(" Covariance generator")]),e._v(" "),t("p",[e._v("This service computes the covariance within an array of values.")]),e._v(" "),t("p",[e._v("It takes as input data:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Input Value")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("time_series_data")]),e._v(" "),t("td",[e._v("A map of objects which contains a map of time/value pairs.")])])])]),e._v(" "),t("p",[e._v("It takes as input params:")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Input Value")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("covariance_estimator")]),e._v(" "),t("td",[e._v("name of algorithm to be taken for computation of covariance")])]),e._v(" "),t("tr",[t("td",[e._v("number_of_decimals")]),e._v(" "),t("td",[e._v("number of ...")])])])]),e._v(" "),t("p",[e._v("It returns as output:")]),e._v(" "),t("ul",[t("li",[e._v("A Json structure containing the shrunk covariance matrix.")])]),e._v(" "),t("h2",{attrs:{id:"the-workflow-without-explicit-data-flow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-workflow-without-explicit-data-flow"}},[e._v("#")]),e._v(" The workflow without explicit data flow")]),e._v(" "),t("p",[e._v("Create a new workflow service. Go to the details page and open the workflow model editor.")]),e._v(" "),t("p",[e._v("Create the following flow:")]),e._v(" "),t("img",{attrs:{width:"768",src:e.$withBase("/images/workflow/workflow-example-v1.png"),alt:""}}),e._v(" "),t("ul",[t("li",[e._v("drag 2 service nodes into the editor")]),e._v(" "),t("li",[e._v("assign the 2 services to the nodes")]),e._v(" "),t("li",[e._v("connect the nodes (start node -> service node -> service node -> end node)")])]),e._v(" "),t("p",[e._v("Now we need to configure the input/output data of the 2 service calls.")]),e._v(" "),t("p",[e._v("Input/output data configuration of stock time series service call:")]),e._v(" "),t("ul",[t("li",[e._v("Click on the stock series service. On the right side of the editor you find the context menu for this node.")])]),e._v(" "),t("p",[e._v("Configure the input params:")]),e._v(" "),t("ul",[t("li",[e._v("Click on the plus-button of the inputs param. Enter "),t("code",[e._v("stock_symbols")]),e._v(" as name and "),t("code",[e._v("${wf_stock_symbols}")]),e._v(" as value.\nWith this configuration you can later pass the stock symbol array as parameter "),t("code",[e._v("wf_stock_symbols")]),e._v(" to the workflow.")]),e._v(" "),t("li",[e._v("Click again on the plus-button of the inputs param. Enter "),t("code",[e._v("start_date")]),e._v(" as name and "),t("code",[e._v("${wf_start_date}")]),e._v(" as value.\nWith this configuration you can later pass the start date for the time series as parameter "),t("code",[e._v("wf_start_date")]),e._v(" to the workflow.")]),e._v(" "),t("li",[e._v("Click again on the plus-button of the inputs param. Enter "),t("code",[e._v("end_date")]),e._v(" as name and "),t("code",[e._v("${wf_end_date}")]),e._v(" as value.\nWith this configuration you can later pass the end date for the time series as parameter "),t("code",[e._v("wf_end_date")]),e._v(" to the workflow.")])]),e._v(" "),t("p",[e._v("Configure the output params:")]),e._v(" "),t("ul",[t("li",[e._v("Click on the plus-button of the outputs param. Enter "),t("code",[e._v("time_series_interim")]),e._v(" as name and "),t("code",[e._v('${result.jsonPath("$.content").element()}')]),e._v(" as value.\nWith this configuration the result of the stock series service call is written into a workflow environment parameter with name "),t("code",[e._v("time_series_interim")]),e._v(" which then can be accessed by the second service.")])]),e._v(" "),t("p",[e._v("Input/output data configuration of covariance service call:")]),e._v(" "),t("ul",[t("li",[e._v("Click on the covariance service. On the right side of the editor you find the context menu for this node.")])]),e._v(" "),t("p",[e._v("Configure the input params:")]),e._v(" "),t("ul",[t("li",[e._v("Click on the plus-button of the inputs param. Enter "),t("code",[e._v("time_series")]),e._v(" as name and "),t("code",[e._v("${time_series_interim}")]),e._v(" as value.\nWith this configuration the interim result of the stock series service call is taken as input for the parameter "),t("code",[e._v("time_series")]),e._v(".")]),e._v(" "),t("li",[e._v("Click again on the plus-button of the inputs param. Enter "),t("code",[e._v("params")]),e._v(" as name and "),t("code",[e._v('"{\\"covariance_estimator\\": \\"LedoitWolf\\", \\"number_of_decimals\\": 4}"')]),e._v(" as value.\nWith this configuration the parameter for the covariance service call are hard coded within the workflow and doesn't need to be specified at call time.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);
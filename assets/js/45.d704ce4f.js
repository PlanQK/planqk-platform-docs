(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{343:function(e,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"create-a-planqk-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-planqk-service"}},[e._v("#")]),e._v(" Create a PlanQK service")]),e._v(" "),t("p",[e._v("This step-by-step guide will teach you how to create a PlanQK service based on your implementation.\nYou will learn how to initialize a Docker Python project using the "),t("RouterLink",{attrs:{to:"/cli-reference.html"}},[e._v("PlanQK CLI")]),e._v(", push its code to an implementation and create a PlanQK managed service based on it.\nThis guide assumes that you already know the basics about "),t("RouterLink",{attrs:{to:"/managed-services/introduction.html"}},[e._v("managed services")]),e._v(" and "),t("RouterLink",{attrs:{to:"/implementations/getting-started.html"}},[e._v("implementations")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),t("p",[e._v("This guide assumes that you have the latest version of PlanQK CLI installed on your machine.\nIf not you can install it by following the instructions in the "),t("RouterLink",{attrs:{to:"/cli-reference.html"}},[e._v("CLI reference")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"initialize-a-docker-python-starter-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-a-docker-python-starter-project"}},[e._v("#")]),e._v(" Initialize a Docker Python Starter project")]),e._v(" "),t("p",[e._v("The PlanQK CLI provides you with a set of starter templates to help you get started quickly with your quantum services.\nYou can see the full list of available templates in our "),t("a",{attrs:{href:"https://github.com/PlanQK/planqk-platform-samples/tree/master/coding-templates",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub repository"),t("OutboundLink")],1),e._v(".\nIn this tutorial we will use the "),t("strong",[e._v("Docker Python Starter")]),e._v(" template to create a new service based on custom Docker containers.\nTo initialize the project, run the following command in your terminal:")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("planqk init\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("In the interactive prompt:")]),e._v(" "),t("ol",[t("li",[e._v("Choose a name, e.g., "),t("code",[e._v("my-service")]),e._v(".")]),e._v(" "),t("li",[e._v("Select "),t("code",[e._v("Docker Python Starter")]),e._v(" as coding template.")]),e._v(" "),t("li",[e._v("Choose your resource configuration.")])]),e._v(" "),t("p",[e._v("After the initialization, you will find a new folder with the name of your service in the current directory.\nFor sake of simplicity, we will not get into details of the generated code in this tutorial.\nYou can check out the README file in the generated project for more information.")]),e._v(" "),t("h3",{attrs:{id:"create-an-implementation-and-push-the-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-an-implementation-and-push-the-code"}},[e._v("#")]),e._v(" Create an implementation and push the code")]),e._v(" "),t("p",[e._v("Next, "),t("a",{attrs:{href:"https://platform.planqk.de/v2/implementations/new",target:"_blank",rel:"noopener noreferrer"}},[e._v("create a new Implementation"),t("OutboundLink")],1),e._v(" and upload the code of your service.\nYou can follow the steps in the "),t("RouterLink",{attrs:{to:"/implementations/getting-started.html"}},[e._v("Getting Started")]),e._v(" guide.\nAfter refreshing your implementation page, you should see all your added files.\nSimilar to the screenshot below.")],1),e._v(" "),t("ImageShadow",{attrs:{src:e.$withBase("/images/implementations/implementation-with-dockerfile.png")}}),e._v(" "),t("h3",{attrs:{id:"create-a-service-based-on-the-implementation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-service-based-on-the-implementation"}},[e._v("#")]),e._v(" Create a service based on the implementation")]),e._v(" "),t("p",[e._v('As your service code includes a Dockerfile, you should see the "Create Service" button in the action bar of your implementation page.\nClick on the button to create a new PlanQk service based on your implementation.\nNavigate to the '),t("a",{attrs:{href:"https://platform.planqk.de/services",target:"_blank",rel:"noopener noreferrer"}},[e._v("Services"),t("OutboundLink")],1),e._v(" page to see your new service.\nCongratulations, you have successfully created a PlanQK service based on your implementation ðŸŽ‰.")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);